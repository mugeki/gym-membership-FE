name: Deploy

on:
  pull_request:
    branches:
      - "main"

jobs:
  build-push-docker:
    name: Build docker image then push to docker hub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker Image
        uses: elgohr/Publish-Docker-Github-Action@v5
        env:
          NEXT_PUBLIC_YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          NEXT_PUBLIC_BE_API_URL: ${{ secrets.BE_API_URL }}
          NEXT_PUBLIC_DEFAULT_PROFILE: ${{ secrets.DEFAULT_PROFILE }}
        with:
          name: mugeki/gym-membership-fe
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile
          buildargs: NEXT_PUBLIC_YOUTUBE_API_KEY,NEXT_PUBLIC_GOOGLE_CLIENT_ID,NEXT_PUBLIC_BE_API_URL,NEXT_PUBLIC_DEFAULT_PROFILE
          tags: 1.0.0

  deployment-ec2-aws:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build-push-docker
    steps:
      - uses: actions/checkout@v2
      - name: SSH Config
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/gym-membership.pem
          chmod 400 ~/.ssh/gym-membership.pem
          cat >>~/.ssh/config <<END
          Host development
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/gym-membership.pem
            StrictHostKeyChecking=no
          END
      - name: Connect to EC2 instance & run Docker image from registry
        run: |
          ssh development '
          docker rm -vf gym-membership-fe && \
          docker pull mugeki/gym-membership-fe:1.0.0 && \
          docker run -d -p 80:80 --name gym-membership-fe \
          mugeki/gym-membership-fe:1.0.0'
